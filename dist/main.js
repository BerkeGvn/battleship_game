(()=>{"use strict";const e=function(e,t,i="horizontal"){const s={name:t,direction:i,isSunk:!1},a=new Array(e).fill(1);function n(){return!!a.every((e=>"X"===e))&&(s.isSunk=!0,!0)}return{details:s,hit:function(e){return!!n()||(a[e]="X",a)},isSink:n,shipSize:a}},t=function(){const t=[];for(let e=0;e<10;e+=1){const e=new Array(10).fill(0);t.push(e)}const i=[e(5,"carrier"),e(4,"battleship"),e(3,"cruiser"),e(2,"destroyer1"),e(2,"destroyer2")];function s(e,t){const i=t;if(i.details.position=[],"vertical"===t.details.direction){i.details.column=e[1];let t=e[0];for(;i.details.position.length<i.shipSize.length;)i.details.position.push(t),t+=1}else{i.details.row=e[0];let t=e[1];for(;i.details.position.length<i.shipSize.length;)i.details.position.push(t),t+=1}}return{board:t,gameover:function(){return!!i.every((e=>!0===e.details.isSunk))},fleet:i,placeShip:function(e,i){if(function(e,t){return"vertical"===t.details.direction&&e[0]+t.shipSize.length>10||"horizontal"===t.details.direction&&e[1]+t.shipSize.length>10}(e,i))return!1;if(function(e,i){let s;if("vertical"===i.details.direction){s=e[0];for(let a=0;a<i.shipSize.length;a+=1)if(1===t[s+a][e[1]])return!0}else for(let a=0;a<i.shipSize.length;a+=1)if(s=e[1],1===t[e[0]][s+a])return!0;return!1}(e,i))return!1;if("vertical"===i.details.direction){for(let s=0;s<i.shipSize.length;s+=1)t[e[0]+s].splice(e[1],1,1);return s(e,i),!0}return t[e[0]].splice(e[1],i.shipSize.length,...i.shipSize),s(e,i),!0},receiveAttack:function(e){return"#"!==t[e[0]][e[1]]&&(1===t[e[0]][e[1]]?(t[e[0]][e[1]]="#",function(e){const t=i.filter((t=>t.details.row===e[0]&&t.details.position.includes(e[1])||t.details.column===e[1]&&t.details.position.includes(e[0])));let s,a;"vertical"===t[0].details.direction?(s=t.filter((t=>t.details.position.includes(e[0]))),a=s[0].details.position.indexOf(e[0])):(s=t.filter((t=>t.details.position.includes(e[1]))),a=s[0].details.position.indexOf(e[1]));const{name:n}=s[0].details;return function(e,t){const s=i.findIndex((t=>t.details.name===e));i[s].hit(t),i[s].isSink()&&(i[s].details.isSunk=!0)}(n,a)}(e)):t[e[0]][e[1]]="#")}}},i=function(){return{gameboard:t(),attack:function(e,t){return e.gameboard.receiveAttack(t)}}},s=(e,t)=>Math.floor(Math.random()*(t-e))+e;let a=i(),n=i();function r(e,t,i){const a=s(0,9),n=s(0,9),o=e.gameboard.placeShip([a,n],t);return!i.includes(`${a}${n}`)&&o?[a,n]:r(e,t,i)}function o(e){const t=[];!function(e){e.gameboard.fleet.forEach((e=>{1===s(0,2)&&(e.details.direction="vertical")}))}(e),e.gameboard.fleet.forEach((i=>{const s=r(e,i,t);t.push(`${s[0]}${s[1]}`),c,e.gameboard.placeShip(s,i)}))}o(n);const d=document.querySelector(".grid-main-container"),l=document.querySelector(".fleet-container"),u=document.querySelector(".start"),f=document.querySelector(".render"),m=(document.querySelectorAll(".box"),document.querySelectorAll(".ships")),h=document.querySelector(".result"),p=document.querySelector(".winner"),L=document.querySelector(".random"),v=function(){const e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("h1");i.textContent="Your Board",i.classList.add("grid-name");const s=document.createElement("h1");s.textContent="Enemey Board",s.classList.add("grid-name"),e.appendChild(i),t.appendChild(s),e.classList.add("player-grid-container"),e.classList.add("grid-container"),t.classList.add("ai-grid-container"),t.classList.add("grid-container"),t.classList.add("none"),t.classList.add("invisible");for(let i=0;i<10;i+=1){const s=document.createElement("div");s.setAttribute("id",i),s.classList.add(`row-${i}`),s.classList.add("row");const a=document.createElement("div");a.setAttribute("id",i),a.classList.add(`row-2-${i}`),a.classList.add("row");for(let e=0;e<10;e+=1){const t=document.createElement("div");t.classList.add("box"),t.classList.add(`box-${e}`),t.setAttribute("data-y",i),t.setAttribute("data-x",e),s.appendChild(t);const n=document.createElement("div");n.classList.add("box"),n.classList.add(`box-2-${e}`),a.appendChild(n)}e.appendChild(s),t.appendChild(a)}d.appendChild(e),d.appendChild(t)},g=[];let b,S,x=1,y=!0,$=!1,E=!1,k=!1,w=!1;function q(e,t){return!(e>9||e<0||t>9||t<0||"#"===a.gameboard.board[e][t]||g.includes(`${e}${t}`))}function z(e){"axisXLeft"===e&&($=!1,E=!0),"axisXRight"===e&&(E=!1,k=!0),"axisYUpper"===e&&(k=!1,w=!0),"axisYBelow"===e&&(w=!1,y=!0)}function C(e,t,i){let s;!function(e,t){return 1===a.gameboard.board[e][t]}(e,t)?(s=document.querySelector(`.row-${e} .box-${t}`),g.push(`${e}${t}`),x=1,s.classList.add("o"),z(i)):(n.attack(a,[e,t]),g.push(`${e}${t}`),s=document.querySelector(`.row-${e} .box-${t}`),s.classList.add("x"),x+=1)}async function A(){let e,t;if($){if(e=b,t=S+x,q(e,t))return C(e,t,"axisXLeft");z("axisXLeft"),x=1}if(E){if(e=b,t=S-x,q(e,t))return C(e,t,"axisXRight");z("axisXRight"),x=1}if(k){if(e=b-x,t=S,q(e,t))return C(e,t,"axisYUpper");z("axisYUpper"),x=1}if(w){if(e=b+x,t=S,q(e,t))return C(e,t,"axisYBelow");z("axisYBelow"),x=1}if(y){const e=s(0,10),t=s(0,10);if(g.includes(`${e}${t}`))return A();g.push(`${e}${t}`),await(300,new Promise((e=>setTimeout(e,300))));const i=document.querySelector(`.row-${e} .box-${t}`);1===a.gameboard.board[e][t]?(i.classList.add("x"),b=e,S=t,$=!0,E=!1,k=!1,w=!1,y=!1):i.classList.add("o"),n.attack(a,[e,t])}return!0}function Y(){return a.gameboard.gameover()?(p.textContent="You lose!",h.classList.remove("none"),!0):!!n.gameboard.gameover()&&(p.textContent="You win!",h.classList.remove("none"),!0)}v();let X=!0;async function B(){return A(),Y(),X=!0,X}function R(){for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)1===a.gameboard.board[e][t]&&document.querySelector(`.row-${e} .box-${t}`).classList.add("mark")}R();let U=0;const D=(()=>{const e=document.querySelectorAll(".ships"),t=document.querySelectorAll(".box");let i,s;return{rotate:function(){e.forEach((e=>{e.addEventListener("dblclick",(()=>{"horizontal"===a.gameboard.fleet[i].details.direction?(a.gameboard.fleet[i].details.direction="vertical",e.classList.remove("horizontal"),e.classList.add("vertical")):(a.gameboard.fleet[i].details.direction="horizontal",e.classList.remove("vertical"),e.classList.add("horizontal"))}))}))},drag:function(n=t){const r=e=>{i=a.gameboard.fleet.findIndex((t=>t.details.name===e.target.dataset.name))},o=e=>{s=e.target},d=e=>e.preventDefault(),c=e=>{e.preventDefault(),e.target.classList.add("hover")},f=e=>{e.target.classList.remove("hover")},m=e=>{const t=e.target,n=Number(t.dataset.y),r=Number(t.dataset.x);a.gameboard.placeShip([n,r],a.gameboard.fleet[i])&&(U+=1,s.classList.add("none")),5===U&&(u.classList.remove("fadeout"),u.classList.remove("invisible"),u.classList.add("fadein"),l.classList.add("shrink"),U=0),R(),e.target.classList.remove("hover")};n.forEach((e=>{e.addEventListener("dragover",d),e.addEventListener("dragenter",c),e.addEventListener("dragleave",f),e.addEventListener("drop",m)})),e.forEach((e=>{e.addEventListener("mousedown",r),e.addEventListener("dragstart",o)}))}}})(),I=function(){!function(){for(;d.firstChild;)d.removeChild(d.firstChild)}(),v();const e=document.querySelectorAll(".box");D.drag(e),m.forEach((e=>e.classList.remove("none"))),a=i(),n=i(),o(n),l.classList.remove("shrink"),h.classList.add("none"),L.classList.add("fadein"),g.splice(0,g.length),x=1,y=!0,$=!1,E=!1,k=!1,w=!1};u.addEventListener("click",(()=>{!function(){if(X){for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)document.querySelector(`.row-2-${e} .box-2-${t}`).addEventListener("click",(i=>{1===n.gameboard.board[e][t]?i.target.classList.add("x"):i.target.classList.add("o"),a.attack(n,[e,t]),Y()||B()}),{once:!0});X=!1}}(),u.classList.remove("fadein"),u.classList.add("fadeout"),u.classList.add("invisible"),L.classList.remove("fadein"),L.classList.add("fadeout");const e=document.querySelector(".ai-grid-container");e.classList.remove("none"),setTimeout((()=>{e.classList.remove("invisible"),e.classList.add("fadein")}),500)})),L.addEventListener("click",(()=>{I(),o(a),function(){for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)1===a.gameboard.board[e][t]&&document.querySelector(`.row-${e} .box-${t}`).classList.add("mark")}(),u.classList.add("fadein"),u.classList.remove("fadeout"),u.classList.remove("invisible"),l.classList.add("shrink")})),f.addEventListener("click",I),D.drag(),D.rotate()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,