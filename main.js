(()=>{"use strict";const e=function(e,t,i="horizontal"){const n={name:t,direction:i,isSunk:!1},s=new Array(e).fill(1);function a(){return!!s.every((e=>"X"===e))&&(n.isSunk=!0,!0)}return{details:n,hit:function(e){return!!a()||(s[e]="X",s)},isSink:a,shipSize:s}},t=function(){const t=[];for(let e=0;e<10;e+=1){const e=new Array(10).fill(0);t.push(e)}const i=[e(5,"carrier"),e(4,"battleship","vertical"),e(3,"cruiser"),e(2,"destroyer1"),e(2,"destroyer2")];function n(e,t){const i=t;if(i.details.position=[],"vertical"===t.details.direction){i.details.column=e[1];let t=e[0];for(;i.details.position.length<i.shipSize.length;)i.details.position.push(t),t+=1}else{i.details.row=e[0];let t=e[1];for(;i.details.position.length<i.shipSize.length;)i.details.position.push(t),t+=1}}return{board:t,gameover:function(){return!!i.every((e=>!0===e.details.isSunk))},fleet:i,placeShip:function(e,i){if(function(e,t){return"vertical"===t.details.direction&&e[0]+t.shipSize.length>10||"horizontal"===t.details.direction&&e[1]+t.shipSize.length>10}(e,i))return!1;if(function(e,i){let n;if("vertical"===i.details.direction){n=e[0];for(let s=0;s<i.shipSize.length;s+=1)if(1===t[n+s][e[1]])return!0}else for(let s=0;s<i.shipSize.length;s+=1)if(n=e[1],1===t[e[0]][n+s])return!0;return!1}(e,i))return!1;if("vertical"===i.details.direction){for(let n=0;n<i.shipSize.length;n+=1)t[e[0]+n].splice(e[1],1,1);return n(e,i),!0}return t[e[0]].splice(e[1],i.shipSize.length,...i.shipSize),n(e,i),!0},receiveAttack:function(e){return"#"!==t[e[0]][e[1]]&&(1===t[e[0]][e[1]]?(t[e[0]][e[1]]="#",function(e){const t=i.filter((t=>t.details.row===e[0]&&t.details.position.includes(e[1])||t.details.column===e[1]&&t.details.position.includes(e[0])));let n,s;"vertical"===t[0].details.direction?(n=t.filter((t=>t.details.position.includes(e[0]))),s=n[0].details.position.indexOf(e[0])):(n=t.filter((t=>t.details.position.includes(e[1]))),s=n[0].details.position.indexOf(e[1]));const{name:a}=n[0].details;return function(e,t){const n=i.findIndex((t=>t.details.name===e));i[n].hit(t),i[n].isSink()&&(i[n].details.isSunk=!0)}(a,s)}(e)):t[e[0]][e[1]]="#")}}},i=function(){return{gameboard:t(),attack:function(e,t){return e.gameboard.receiveAttack(t)}}},n=(e,t)=>Math.floor(Math.random()*(t-e))+e;let s=i(),a=i();function r(e,t,i){const s=n(0,9),a=n(0,9),o=e.gameboard.placeShip([s,a],t);return!i.includes(`${s}${a}`)&&o?[s,a]:r(e,t,i)}function o(e){const t=[];e.gameboard.fleet.forEach((i=>{const n=r(e,i,t);t.push(`${n[0]}${n[1]}`),e.gameboard.placeShip(n,i)}))}o(a);const d=document.querySelector(".grid-main-container"),l=document.querySelector(".fleet-container"),c=document.querySelector(".start"),u=document.querySelector(".render"),m=(document.querySelectorAll(".box"),document.querySelectorAll(".ships")),f=document.querySelector(".result"),h=document.querySelector(".winner"),p=function(){const e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("h1");i.textContent="Your Board",i.classList.add("grid-name");const n=document.createElement("h1");n.textContent="Enemey Board",n.classList.add("grid-name"),e.appendChild(i),t.appendChild(n),e.classList.add("player-grid-container"),e.classList.add("grid-container"),t.classList.add("ai-grid-container"),t.classList.add("grid-container"),t.classList.add("none"),t.classList.add("invisible");for(let i=0;i<10;i+=1){const n=document.createElement("div");n.setAttribute("id",i),n.classList.add(`row-${i}`),n.classList.add("row");const s=document.createElement("div");s.setAttribute("id",i),s.classList.add(`row-2-${i}`),s.classList.add("row");for(let e=0;e<10;e+=1){const t=document.createElement("div");t.classList.add("box"),t.classList.add(`box-${e}`),t.setAttribute("data-y",i),t.setAttribute("data-x",e),n.appendChild(t);const a=document.createElement("div");a.classList.add("box"),a.classList.add(`box-2-${e}`),s.appendChild(a)}e.appendChild(n),t.appendChild(s)}d.appendChild(e),d.appendChild(t)};function v(){return s.gameboard.gameover()?(h.textContent="You lose!",f.classList.remove("none"),!0):!!a.gameboard.gameover()&&(h.textContent="You win!",f.classList.remove("none"),!0)}p();let L=!0;const g=[];async function b(){const e=n(0,10),t=n(0,10);if(g.includes(`${e}${t}`))return b();g.push(`${e}${t}`),await(300,new Promise((e=>setTimeout(e,300))));const i=document.querySelector(`.row-${e} .box-${t}`);return 1===s.gameboard.board[e][t]?i.classList.add("x"):i.classList.add("o"),a.attack(s,[e,t]),v(),L=!0,L}function S(){for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)1===s.gameboard.board[e][t]&&document.querySelector(`.row-${e} .box-${t}`).classList.add("mark")}S();let y=0;const E=(()=>{const e=document.querySelectorAll(".ships"),t=document.querySelectorAll(".box");let i,n;return{rotate:function(){e.forEach((e=>{e.addEventListener("dblclick",(()=>{"horizontal"===s.gameboard.fleet[i].details.direction?(s.gameboard.fleet[i].details.direction="vertical",e.classList.remove("horizontal"),e.classList.add("vertical")):(s.gameboard.fleet[i].details.direction="horizontal",e.classList.remove("vertical"),e.classList.add("horizontal"))}))}))},drag:function(a=t){const r=e=>{i=s.gameboard.fleet.findIndex((t=>t.details.name===e.target.dataset.name))},o=e=>{n=e.target},d=e=>e.preventDefault(),u=e=>{e.preventDefault(),e.target.classList.add("hover")},m=e=>{e.target.classList.remove("hover")},f=e=>{const t=e.target,a=Number(t.dataset.y),r=Number(t.dataset.x);s.gameboard.placeShip([a,r],s.gameboard.fleet[i])&&(y+=1,n.classList.add("none")),5===y&&(c.classList.remove("fadeout"),c.classList.remove("invisible"),c.classList.add("fadein"),l.classList.add("shrink"),y=0),S(),e.target.classList.remove("hover")};a.forEach((e=>{e.addEventListener("dragover",d),e.addEventListener("dragenter",u),e.addEventListener("dragleave",m),e.addEventListener("drop",f)})),e.forEach((e=>{e.addEventListener("mousedown",r),e.addEventListener("dragstart",o)}))}}})();c.addEventListener("click",(()=>{!function(){for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)document.querySelector(`.row-2-${e} .box-2-${t}`).addEventListener("click",(i=>{if(L){if(1===a.gameboard.board[e][t]?i.target.classList.add("x"):i.target.classList.add("o"),s.attack(a,[e,t]),v())return;b(),L=!1}}),{once:!0})}(),c.classList.remove("fadein"),c.classList.add("fadeout"),c.classList.add("invisible");const e=document.querySelector(".ai-grid-container");e.classList.remove("none"),setTimeout((()=>{e.classList.remove("invisible"),e.classList.add("fadein")}),500)})),u.addEventListener("click",(function(){!function(){for(;d.firstChild;)d.removeChild(d.firstChild)}(),p();const e=document.querySelectorAll(".box");E.drag(e),m.forEach((e=>e.classList.remove("none"))),s=i(),a=i(),o(a),l.classList.remove("shrink"),f.classList.add("none"),g.splice(0,g.length)})),E.drag(),E.rotate()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwX2dhbWUvLi9zcmMvbW9kdWxlcy9GYWN0b3JpZXMvc2hpcEZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcF9nYW1lLy4vc3JjL21vZHVsZXMvRmFjdG9yaWVzL2dhbWVib2FyZEZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcF9nYW1lLy4vc3JjL21vZHVsZXMvRmFjdG9yaWVzL1BsYXllci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwX2dhbWUvLi9zcmMvbW9kdWxlcy9oZWxwZXJzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXBfZ2FtZS8uL3NyYy9tb2R1bGVzL3BsYXllcnMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcF9nYW1lLy4vc3JjL21vZHVsZXMvZG9tRWxlbWVudHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcF9nYW1lLy4vc3JjL21vZHVsZXMvZ3JpZC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwX2dhbWUvLi9zcmMvbW9kdWxlcy9nYW1lLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXBfZ2FtZS8uL3NyYy9tb2R1bGVzL2RyYWdBbmRSb3RhdGUuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcF9nYW1lLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXBfZ2FtZS8uL3NyYy9tb2R1bGVzL3JlbmRlci5qcyJdLCJuYW1lcyI6WyJsZW5ndGgiLCJuYW1lIiwiZGlyZWN0aW9uIiwiZGV0YWlscyIsImlzU3VuayIsInNoaXBTaXplIiwiQXJyYXkiLCJmaWxsIiwiaXNTaW5rIiwiZXZlcnkiLCJwYXJ0IiwiaGl0IiwicG9zaXRpb24iLCJib2FyZCIsImkiLCJyb3ciLCJwdXNoIiwiZmxlZXQiLCJyZWNvcmRTaGlwcyIsInNoaXBQb3NpdGlvbiIsInNoaXAiLCJyZWNvcmRUaGVTaGlwIiwiY29sdW1uIiwiZ2FtZW92ZXIiLCJwbGFjZVNoaXAiLCJwcmV2ZW50T3ZlckV4dGVuZCIsImNvb3JkIiwiaiIsImNoZWNrQ29vcmRpbmF0ZXMiLCJzcGxpY2UiLCJyZWNlaXZlQXR0YWNrIiwicmVjZWl2ZWRDb29yZCIsImZpbHRlciIsInZhbCIsImluY2x1ZGVzIiwiZGFtYWdlZFNoaXAiLCJkYW1hZ2VkUG9zaXRpb24iLCJpbmRleE9mIiwic2hpcEluZGV4IiwiZmluZEluZGV4IiwiaGl0VGhlU2hpcCIsImNhbGN1bGF0ZUhpdExvYyIsImdhbWVib2FyZCIsImF0dGFjayIsImVuZW15IiwicmFuZG9tIiwibWluIiwibWF4IiwiTWF0aCIsImZsb29yIiwicGxheWVyMSIsInBsYXllcjIiLCJyYW5kb21OdW1iZXJzIiwicGxheWVyIiwicGxhY2VkQ29vcmQiLCJyYW5kb21Sb3ciLCJyYW5kb21Db2x1bW4iLCJwcm9wZXJQbGFjZWQiLCJyYW5kb21QbGFjZW1lbnQiLCJmb3JFYWNoIiwicmFuZG9tQ29vcmQiLCJjb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJmbGVldENvbnRhaW5lciIsInN0YXJ0QnRuIiwicmVuZGVyQnRuIiwic2hpcHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVzdWx0U2NyZWVuIiwid2lubmVyIiwicGxheWVyTWFpbkRpdiIsImNyZWF0ZUVsZW1lbnQiLCJhaU1haW5EaXYiLCJwbGF5ZXIxQm9hcmQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsImFkZCIsInBsYXllcjJCb2FyZCIsImFwcGVuZENoaWxkIiwic2V0QXR0cmlidXRlIiwicm93MiIsImNvbCIsImNvbDIiLCJjaGVja0dhbWVvdmVyIiwicmVtb3ZlIiwicGxheWVyVHVybiIsInJhbmRvbUhpdENvb3JkIiwiYXN5bmMiLCJyYW5kb21IaXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJpbm5lckRpdiIsIm1hcmtTaGlwRGl2cyIsInNoaXBPbkJvYXJkIiwiZ3JpZENlbGxzIiwiZHJhZ2dlZFNoaXAiLCJyb3RhdGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZHJhZyIsImNlbGxzIiwiZ2V0RHJhZ2dlZFNoaXBJbmRleCIsImUiLCJ0YXJnZXQiLCJkYXRhc2V0IiwiZHJhZ1N0YXJ0IiwiZHJhZ092ZXIiLCJwcmV2ZW50RGVmYXVsdCIsImRyYWdFbnRlciIsImRyYWdMZWF2ZSIsImRyYWdEcm9wIiwieSIsIk51bWJlciIsIngiLCJjZWxsIiwib25jZSIsImhpdEV2ZW50IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwicmVtb3ZlR3JpZHMiXSwibWFwcGluZ3MiOiJtQkFpQ0EsUUFqQ0EsU0FBcUJBLEVBQVFDLEVBQU1DLEVBQVksY0FDN0MsTUFBTUMsRUFBVSxDQUNkRixPQUNBQyxZQUNBRSxRQUFRLEdBR0pDLEVBQVcsSUFBSUMsTUFBTU4sR0FBUU8sS0FBSyxHQUV4QyxTQUFTQyxJQUNQLFFBQUlILEVBQVNJLE9BQU9DLEdBQWtCLE1BQVRBLE1BQzNCUCxFQUFRQyxRQUFTLEdBQ1YsR0FhWCxNQUFPLENBQ0xELFVBQ0FRLElBVkYsU0FBYUMsR0FDWCxRQUFJSixNQUdKSCxFQUFTTyxHQUFZLElBQ2RQLElBTVBHLFNBQ0FILGFDMEhKLEVBckpBLFdBQ0UsTUFBTVEsRUFBUSxHQUVkLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLEdBQUssRUFBRyxDQUM5QixNQUFNQyxFQUFNLElBQUlULE1BQU0sSUFBSUMsS0FBSyxHQUMvQk0sRUFBTUcsS0FBS0QsR0FJYixNQU9NRSxFQUFRLENBUEUsRUFBWSxFQUFHLFdBQ1osRUFBWSxFQUFHLGFBQWMsWUFDaEMsRUFBWSxFQUFHLFdBQ1osRUFBWSxFQUFHLGNBQ2YsRUFBWSxFQUFHLGVBa0JsQyxTQUFTQyxFQUFZQyxFQUFjQyxHQUNqQyxNQUFNQyxFQUFnQkQsRUFJdEIsR0FGQUMsRUFBY2xCLFFBQVFTLFNBQVcsR0FFRixhQUEzQlEsRUFBS2pCLFFBQVFELFVBQTBCLENBQ3pDbUIsRUFBY2xCLFFBQVFtQixPQUFTSCxFQUFhLEdBQzVDLElBQUlKLEVBQU1JLEVBQWEsR0FDdkIsS0FBT0UsRUFBY2xCLFFBQVFT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LENBQUNyQyxFQUFHYSxJQUN4QnlELElBQ0YsT0FFRkssSUFFQUgsR0FBYSxLQUVkLENBQUU4QixNQUFNLElFMUVmQyxHQUNBcEQsRUFBU1csVUFBVVMsT0FBTyxVQUMxQnBCLEVBQVNXLFVBQVVDLElBQUksV0FDdkJaLEVBQVNXLFVBQVVDLElBQUksYUFDdkIsTUFBTUosRUFBWVgsU0FBU0MsY0FBYyxzQkFDekNVLEVBQVVHLFVBQVVTLE9BQU8sUUFDM0JPLFlBQVcsS0FDVG5CLEVBQVVHLFVBQVVTLE9BQU8sYUFDM0JaLEVBQVVHLFVBQVVDLElBQUksWUFDdkIsUUFFTFgsRUFBVWlDLGlCQUFpQixTQ0szQixZQVZBLFdBQ0UsS0FBT3RDLEVBQVV5RCxZQUNmekQsRUFBVTBELFlBQVkxRCxFQUFVeUQsWUFTbENFLEdBRUEsSUFFQSxNQUFNbkIsRUFBUXZDLFNBQVNNLGlCQUFpQixRQUV4QyxFQUFBZ0MsS0FBbUJDLEdBVm5CbEMsRUFBTVIsU0FBU3ZDLEdBQVNBLEVBQUt3RCxVQUFVUyxPQUFPLFVOYjlDbkMsRUFBVSxJQUNWQyxFQUFVLElNeUJWTyxFQUFnQlAsR0F4QmhCYSxFQUFlWSxVQUFVUyxPQUFPLFVBQ2hDaEIsRUFBYU8sVUFBVUMsSUFBSSxRQTBCM0JVLEVBQWUxRCxPQUFPLEVBQUcwRCxFQUFldkYsV0RqQjFDLEVBQUFvRyxPQUNBLFkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHNoaXBGYWN0b3J5KGxlbmd0aCwgbmFtZSwgZGlyZWN0aW9uID0gJ2hvcml6b250YWwnKSB7XG4gIGNvbnN0IGRldGFpbHMgPSB7XG4gICAgbmFtZSxcbiAgICBkaXJlY3Rpb24sXG4gICAgaXNTdW5rOiBmYWxzZSxcbiAgfTtcblxuICBjb25zdCBzaGlwU2l6ZSA9IG5ldyBBcnJheShsZW5ndGgpLmZpbGwoMSk7XG5cbiAgZnVuY3Rpb24gaXNTaW5rKCkge1xuICAgIGlmIChzaGlwU2l6ZS5ldmVyeSgocGFydCkgPT4gcGFydCA9PT0gJ1gnKSkge1xuICAgICAgZGV0YWlscy5pc1N1bmsgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhpdChwb3NpdGlvbikge1xuICAgIGlmIChpc1NpbmsoKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHNoaXBTaXplW3Bvc2l0aW9uXSA9ICdYJztcbiAgICByZXR1cm4gc2hpcFNpemU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGRldGFpbHMsXG4gICAgaGl0LFxuICAgIGlzU2luayxcbiAgICBzaGlwU2l6ZSxcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2hpcEZhY3Rvcnk7XG4iLCJpbXBvcnQgc2hpcEZhY3RvcnkgZnJvbSAnLi9zaGlwRmFjdG9yeSc7XG5cbmZ1bmN0aW9uIGdhbWVib2FyZEZhY3RvcnkoKSB7XG4gIGNvbnN0IGJvYXJkID0gW107XG4gIC8vIFRvIGNyZWF0ZSBnYW1lYm9hcmRcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSArPSAxKSB7XG4gICAgY29uc3Qgcm93ID0gbmV3IEFycmF5KDEwKS5maWxsKDApO1xuICAgIGJvYXJkLnB1c2gocm93KTtcbiAgfVxuXG4gIC8vIFRlYW1zIGVudGlyZSBmbGVldFxuICBjb25zdCBjYXJyaWVyID0gc2hpcEZhY3RvcnkoNSwgJ2NhcnJpZXInKTtcbiAgY29uc3QgYmF0dGxlc2hpcCA9IHNoaXBGYWN0b3J5KDQsICdiYXR0bGVzaGlwJywgJ3ZlcnRpY2FsJyk7XG4gIGNvbnN0IGNydWlzZXIgPSBzaGlwRmFjdG9yeSgzLCAnY3J1aXNlcicpO1xuICBjb25zdCBkZXN0cm95ZXIxID0gc2hpcEZhY3RvcnkoMiwgJ2Rlc3Ryb3llcjEnKTtcbiAgY29uc3QgZGVzdHJveWVyMiA9IHNoaXBGYWN0b3J5KDIsICdkZXN0cm95ZXIyJyk7XG5cbiAgLy8gU2F2aW5nIHRoZW0gaW4gYXJyYXkgZm9yIGFjY2Vzc2luZyB0aGVtIG1vcmUgZWFzaWx5IGFuZCBlZGl0IHRoZW1cbiAgY29uc3QgZmxlZXQgPSBbXG4gICAgY2FycmllcixcbiAgICBiYXR0bGVzaGlwLFxuICAgIGNydWlzZXIsXG4gICAgZGVzdHJveWVyMSxcbiAgICBkZXN0cm95ZXIyLFxuICBdO1xuXG4gIGZ1bmN0aW9uIGdhbWVvdmVyKCkge1xuICAgIGlmIChmbGVldC5ldmVyeSgoc2hpcCkgPT4gc2hpcC5kZXRhaWxzLmlzU3VuayA9PT0gdHJ1ZSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gUmVjb3JkaW5nIHNoaXAncyBsb2NhdGlvbiBmb3IgcmVjZWl2ZSBjb3JyZWN0IGhpdCBsb2NhdGlvblxuICBmdW5jdGlvbiByZWNvcmRTaGlwcyhzaGlwUG9zaXRpb24sIHNoaXApIHtcbiAgICBjb25zdCByZWNvcmRUaGVTaGlwID0gc2hpcDtcblxuICAgIHJlY29yZFRoZVNoaXAuZGV0YWlscy5wb3NpdGlvbiA9IFtdO1xuXG4gICAgaWYgKHNoaXAuZGV0YWlscy5kaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgIHJlY29yZFRoZVNoaXAuZGV0YWlscy5jb2x1bW4gPSBzaGlwUG9zaXRpb25bMV07XG4gICAgICBsZXQgcm93ID0gc2hpcFBvc2l0aW9uWzBdO1xuICAgICAgd2hpbGUgKHJlY29yZFRoZVNoaXAuZGV0YWlscy5wb3NpdGlvbi5sZW5ndGggPCByZWNvcmRUaGVTaGlwLnNoaXBTaXplLmxlbmd0aCkge1xuICAgICAgICByZWNvcmRUaGVTaGlwLmRldGFpbHMucG9zaXRpb24ucHVzaChyb3cpO1xuICAgICAgICByb3cgKz0gMTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmVjb3JkVGhlU2hpcC5kZXRhaWxzLnJvdyA9IHNoaXBQb3NpdGlvblswXTtcbiAgICAgIGxldCBjb2x1bW4gPSBzaGlwUG9zaXRpb25bMV07XG4gICAgICB3aGlsZSAocmVjb3JkVGhlU2hpcC5kZXRhaWxzLnBvc2l0aW9uLmxlbmd0aCA8IHJlY29yZFRoZVNoaXAuc2hpcFNpemUubGVuZ3RoKSB7XG4gICAgICAgIHJlY29yZFRoZVNoaXAuZGV0YWlscy5wb3NpdGlvbi5wdXNoKGNvbHVtbik7XG4gICAgICAgIGNvbHVtbiArPSAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBQcmV2ZW50aW5nIGJvYXJkIGVsZW1lbnRzIHRvIGJlIG1vcmUgdGhhbiAxMFxuICBmdW5jdGlvbiBwcmV2ZW50T3ZlckV4dGVuZChwb3NpdGlvbiwgc2hpcCkge1xuICAgIGlmIChzaGlwLmRldGFpbHMuZGlyZWN0aW9uID09PSAndmVydGljYWwnICYmIHBvc2l0aW9uWzBdICsgc2hpcC5zaGlwU2l6ZS5sZW5ndGggPiAxMCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBpZiAoc2hpcC5kZXRhaWxzLmRpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnICYmIHBvc2l0aW9uWzFdICsgc2hpcC5zaGlwU2l6ZS5sZW5ndGggPiAxMCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIENoZWNraW5nIGNvb3JkaW5hdGVzIGlmIHRoZXJlIGlzIGEgc2hpcCBhbHJlYWR5XG4gIGZ1bmN0aW9uIGNoZWNrQ29vcmRpbmF0ZXMoY29vcmQsIHNoaXApIHtcbiAgICBsZXQgajtcbiAgICBpZiAoc2hpcC5kZXRhaWxzLmRpcmVjdGlvbiA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgaiA9IGNvb3JkWzBdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLnNoaXBTaXplLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmIChib2FyZFtqICsgaV1bY29vcmRbMV1dID09PSAxKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLnNoaXBTaXplLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGogPSBjb29yZFsxXTtcbiAgICAgICAgaWYgKGJvYXJkW2Nvb3JkWzBdXVtqICsgaV0gPT09IDEpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBwbGFjZVNoaXAocG9zaXRpb24sIHNoaXApIHtcbiAgICBpZiAocHJldmVudE92ZXJFeHRlbmQocG9zaXRpb24sIHNoaXApKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChjaGVja0Nvb3JkaW5hdGVzKHBvc2l0aW9uLCBzaGlwKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChzaGlwLmRldGFpbHMuZGlyZWN0aW9uID09PSAndmVydGljYWwnKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAuc2hpcFNpemUubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgYm9hcmRbcG9zaXRpb25bMF0gKyBpXS5zcGxpY2UocG9zaXRpb25bMV0sIDEsIDEpO1xuICAgICAgfVxuICAgICAgcmVjb3JkU2hpcHMocG9zaXRpb24sIHNoaXAsICd2ZXJ0aWNhbCcpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgYm9hcmRbcG9zaXRpb25bMF1dLnNwbGljZShwb3NpdGlvblsxXSwgc2hpcC5zaGlwU2l6ZS5sZW5ndGgsIC4uLnNoaXAuc2hpcFNpemUpO1xuICAgIHJlY29yZFNoaXBzKHBvc2l0aW9uLCBzaGlwKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhpdFRoZVNoaXAobmFtZSwgZGFtYWdlZFBvc2l0aW9uKSB7XG4gICAgY29uc3Qgc2hpcEluZGV4ID0gZmxlZXQuZmluZEluZGV4KChzaGlwKSA9PiBzaGlwLmRldGFpbHMubmFtZSA9PT0gbmFtZSk7XG4gICAgZmxlZXRbc2hpcEluZGV4XS5oaXQoZGFtYWdlZFBvc2l0aW9uKTtcbiAgICBpZiAoZmxlZXRbc2hpcEluZGV4XS5pc1NpbmsoKSkge1xuICAgICAgZmxlZXRbc2hpcEluZGV4XS5kZXRhaWxzLmlzU3VuayA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2FsY3VsYXRlSGl0TG9jKGNvb3JkKSB7XG4gICAgY29uc3QgcmVjZWl2ZWRDb29yZCA9IGZsZWV0LmZpbHRlcigodmFsKSA9PiAodmFsLmRldGFpbHMucm93ID09PSBjb29yZFswXVxuICAgICAgJiYgdmFsLmRldGFpbHMucG9zaXRpb24uaW5jbHVkZXMoY29vcmRbMV0pKVxuICAgICAgfHwgKHZhbC5kZXRhaWxzLmNvbHVtbiA9PT0gY29vcmRbMV1cbiAgICAgICAgJiYgdmFsLmRldGFpbHMucG9zaXRpb24uaW5jbHVkZXMoY29vcmRbMF0pKSk7XG5cbiAgICBsZXQgZGFtYWdlZFNoaXA7XG4gICAgbGV0IGRhbWFnZWRQb3NpdGlvbjtcblxuICAgIGlmIChyZWNlaXZlZENvb3JkWzBdLmRldGFpbHMuZGlyZWN0aW9uID09PSAndmVydGljYWwnKSB7XG4gICAgICBkYW1hZ2VkU2hpcCA9IHJlY2VpdmVkQ29vcmQuZmlsdGVyKCh2YWwpID0+IHZhbC5kZXRhaWxzLnBvc2l0aW9uLmluY2x1ZGVzKGNvb3JkWzBdKSk7XG4gICAgICBkYW1hZ2VkUG9zaXRpb24gPSBkYW1hZ2VkU2hpcFswXS5kZXRhaWxzLnBvc2l0aW9uLmluZGV4T2YoY29vcmRbMF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYW1hZ2VkU2hpcCA9IHJlY2VpdmVkQ29vcmQuZmlsdGVyKCh2YWwpID0+IHZhbC5kZXRhaWxzLnBvc2l0aW9uLmluY2x1ZGVzKGNvb3JkWzFdKSk7XG4gICAgICBkYW1hZ2VkUG9zaXRpb24gPSBkYW1hZ2VkU2hpcFswXS5kZXRhaWxzLnBvc2l0aW9uLmluZGV4T2YoY29vcmRbMV0pO1xuICAgIH1cblxuICAgIGNvbnN0IHsgbmFtZSB9ID0gZGFtYWdlZFNoaXBbMF0uZGV0YWlscztcbiAgICByZXR1cm4gaGl0VGhlU2hpcChuYW1lLCBkYW1hZ2VkUG9zaXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVjZWl2ZUF0dGFjayhjb29yZCkge1xuICAgIGlmIChib2FyZFtjb29yZFswXV1bY29vcmRbMV1dID09PSAnIycpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0gPT09IDEpIHtcbiAgICAgIGJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0gPSAnIyc7XG4gICAgICByZXR1cm4gY2FsY3VsYXRlSGl0TG9jKGNvb3JkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYm9hcmRbY29vcmRbMF1dW2Nvb3JkWzFdXSA9ICcjJztcbiAgfVxuICByZXR1cm4ge1xuICAgIGJvYXJkLCBnYW1lb3ZlciwgZmxlZXQsIHBsYWNlU2hpcCwgcmVjZWl2ZUF0dGFjayxcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2FtZWJvYXJkRmFjdG9yeTtcbiIsImltcG9ydCBnYW1lYm9hcmRGYWN0b3J5IGZyb20gJy4vZ2FtZWJvYXJkRmFjdG9yeSc7XG5cbmZ1bmN0aW9uIFBsYXllcigpIHtcbiAgY29uc3QgZ2FtZWJvYXJkID0gZ2FtZWJvYXJkRmFjdG9yeSgpO1xuXG4gIGZ1bmN0aW9uIGF0dGFjayhlbmVteSwgY29vcmQpIHtcbiAgICByZXR1cm4gZW5lbXkuZ2FtZWJvYXJkLnJlY2VpdmVBdHRhY2soY29vcmQpO1xuICB9XG5cbiAgcmV0dXJuIHsgZ2FtZWJvYXJkLCBhdHRhY2sgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxheWVyO1xuIiwiY29uc3QgcmFuZG9tID0gKG1pbiwgbWF4KSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XG5jb25zdCBzbGVlcCA9IChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbmV4cG9ydCB7IHJhbmRvbSwgc2xlZXAgfTtcbiIsImltcG9ydCBQbGF5ZXIgZnJvbSAnLi9GYWN0b3JpZXMvUGxheWVyJztcbmltcG9ydCB7IHJhbmRvbSB9IGZyb20gJy4vaGVscGVycyc7XG5cbmxldCBwbGF5ZXIxID0gUGxheWVyKCk7XG5sZXQgcGxheWVyMiA9IFBsYXllcigpO1xuXG5mdW5jdGlvbiByZXNldFBsYXllcnMoKSB7XG4gIHBsYXllcjEgPSBQbGF5ZXIoKTtcbiAgcGxheWVyMiA9IFBsYXllcih0cnVlKTtcbn1cbmZ1bmN0aW9uIHJhbmRvbU51bWJlcnMocGxheWVyLCBzaGlwLCBwbGFjZWRDb29yZCkge1xuICBjb25zdCByYW5kb21Sb3cgPSByYW5kb20oMCwgOSk7XG4gIGNvbnN0IHJhbmRvbUNvbHVtbiA9IHJhbmRvbSgwLCA5KTtcbiAgY29uc3QgcHJvcGVyUGxhY2VkID0gcGxheWVyLmdhbWVib2FyZC5wbGFjZVNoaXAoW3JhbmRvbVJvdywgcmFuZG9tQ29sdW1uXSwgc2hpcCk7XG4gIGlmICghcGxhY2VkQ29vcmQuaW5jbHVkZXMoYCR7cmFuZG9tUm93fSR7cmFuZG9tQ29sdW1ufWApICYmIHByb3BlclBsYWNlZCkge1xuICAgIHJldHVybiBbcmFuZG9tUm93LCByYW5kb21Db2x1bW5dO1xuICB9XG4gIHJldHVybiByYW5kb21OdW1iZXJzKHBsYXllciwgc2hpcCwgcGxhY2VkQ29vcmQpO1xufVxuXG5mdW5jdGlvbiByYW5kb21QbGFjZW1lbnQocGxheWVyKSB7XG4gIGNvbnN0IHBsYWNlZENvb3JkID0gW107XG4gIHBsYXllci5nYW1lYm9hcmQuZmxlZXQuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgIGNvbnN0IHJhbmRvbUNvb3JkID0gcmFuZG9tTnVtYmVycyhwbGF5ZXIsIHNoaXAsIHBsYWNlZENvb3JkKTtcbiAgICBwbGFjZWRDb29yZC5wdXNoKGAke3JhbmRvbUNvb3JkWzBdfSR7cmFuZG9tQ29vcmRbMV19YCk7XG4gICAgcGxheWVyLmdhbWVib2FyZC5wbGFjZVNoaXAocmFuZG9tQ29vcmQsIHNoaXApO1xuICB9KTtcbn1cbnJhbmRvbVBsYWNlbWVudChwbGF5ZXIyKTtcbmV4cG9ydCB7XG4gIHBsYXllcjEsIHBsYXllcjIsIHJlc2V0UGxheWVycywgcmFuZG9tUGxhY2VtZW50LFxufTtcbiIsImNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ncmlkLW1haW4tY29udGFpbmVyJyk7XG5jb25zdCBmbGVldENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mbGVldC1jb250YWluZXInKTtcbmNvbnN0IHN0YXJ0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0YXJ0Jyk7XG5jb25zdCByZW5kZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVuZGVyJyk7XG5jb25zdCBjZWxscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ib3gnKTtcbmNvbnN0IHNoaXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNoaXBzJyk7XG5jb25zdCByZXN1bHRTY3JlZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0Jyk7XG5jb25zdCB3aW5uZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2lubmVyJyk7XG5cbmV4cG9ydCB7XG4gIGNvbnRhaW5lciwgZmxlZXRDb250YWluZXIsIHN0YXJ0QnRuLCByZW5kZXJCdG4sIGNlbGxzLCBzaGlwcywgcmVzdWx0U2NyZWVuLCB3aW5uZXIsXG59O1xuIiwiaW1wb3J0IHsgY29udGFpbmVyIH0gZnJvbSAnLi9kb21FbGVtZW50cyc7XG5cbmZ1bmN0aW9uIGNyZWF0ZUdyaWQoKSB7XG4gIGNvbnN0IHBsYXllck1haW5EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3QgYWlNYWluRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgY29uc3QgcGxheWVyMUJvYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgcGxheWVyMUJvYXJkLnRleHRDb250ZW50ID0gJ1lvdXIgQm9hcmQnO1xuICBwbGF5ZXIxQm9hcmQuY2xhc3NMaXN0LmFkZCgnZ3JpZC1uYW1lJyk7XG4gIGNvbnN0IHBsYXllcjJCb2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gIHBsYXllcjJCb2FyZC50ZXh0Q29udGVudCA9ICdFbmVtZXkgQm9hcmQnO1xuICBwbGF5ZXIyQm9hcmQuY2xhc3NMaXN0LmFkZCgnZ3JpZC1uYW1lJyk7XG5cbiAgcGxheWVyTWFpbkRpdi5hcHBlbmRDaGlsZChwbGF5ZXIxQm9hcmQpO1xuICBhaU1haW5EaXYuYXBwZW5kQ2hpbGQocGxheWVyMkJvYXJkKTtcblxuICBwbGF5ZXJNYWluRGl2LmNsYXNzTGlzdC5hZGQoJ3BsYXllci1ncmlkLWNvbnRhaW5lcicpO1xuICBwbGF5ZXJNYWluRGl2LmNsYXNzTGlzdC5hZGQoJ2dyaWQtY29udGFpbmVyJyk7XG4gIGFpTWFpbkRpdi5jbGFzc0xpc3QuYWRkKCdhaS1ncmlkLWNvbnRhaW5lcicpO1xuICBhaU1haW5EaXYuY2xhc3NMaXN0LmFkZCgnZ3JpZC1jb250YWluZXInKTtcbiAgYWlNYWluRGl2LmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcbiAgYWlNYWluRGl2LmNsYXNzTGlzdC5hZGQoJ2ludmlzaWJsZScpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpICs9IDEpIHtcbiAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByb3cuc2V0QXR0cmlidXRlKCdpZCcsIGkpO1xuICAgIHJvdy5jbGFzc0xpc3QuYWRkKGByb3ctJHtpfWApO1xuICAgIHJvdy5jbGFzc0xpc3QuYWRkKCdyb3cnKTtcblxuICAgIGNvbnN0IHJvdzIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByb3cyLnNldEF0dHJpYnV0ZSgnaWQnLCBpKTtcbiAgICByb3cyLmNsYXNzTGlzdC5hZGQoYHJvdy0yLSR7aX1gKTtcbiAgICByb3cyLmNsYXNzTGlzdC5hZGQoJ3JvdycpO1xuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XG4gICAgICBjb25zdCBjb2wgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGNvbC5jbGFzc0xpc3QuYWRkKCdib3gnKTtcbiAgICAgIGNvbC5jbGFzc0xpc3QuYWRkKGBib3gtJHtqfWApO1xuICAgICAgY29sLnNldEF0dHJpYnV0ZSgnZGF0YS15JywgaSk7XG4gICAgICBjb2wuc2V0QXR0cmlidXRlKCdkYXRhLXgnLCBqKTtcbiAgICAgIHJvdy5hcHBlbmRDaGlsZChjb2wpO1xuXG4gICAgICBjb25zdCBjb2wyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBjb2wyLmNsYXNzTGlzdC5hZGQoJ2JveCcpO1xuICAgICAgY29sMi5jbGFzc0xpc3QuYWRkKGBib3gtMi0ke2p9YCk7XG4gICAgICByb3cyLmFwcGVuZENoaWxkKGNvbDIpO1xuICAgIH1cbiAgICBwbGF5ZXJNYWluRGl2LmFwcGVuZENoaWxkKHJvdyk7XG4gICAgYWlNYWluRGl2LmFwcGVuZENoaWxkKHJvdzIpO1xuICB9XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXJNYWluRGl2KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKGFpTWFpbkRpdik7XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVHcmlkO1xuIiwiaW1wb3J0IHsgcGxheWVyMSwgcGxheWVyMiB9IGZyb20gJy4vcGxheWVycyc7XG5pbXBvcnQgeyByYW5kb20sIHNsZWVwIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCBjcmVhdGVHcmlkIGZyb20gJy4vZ3JpZCc7XG5pbXBvcnQgeyByZXN1bHRTY3JlZW4sIHdpbm5lciB9IGZyb20gJy4vZG9tRWxlbWVudHMnO1xuXG5jcmVhdGVHcmlkKCk7XG5cbmZ1bmN0aW9uIGNoZWNrR2FtZW92ZXIoKSB7XG4gIGlmIChwbGF5ZXIxLmdhbWVib2FyZC5nYW1lb3ZlcigpKSB7XG4gICAgd2lubmVyLnRleHRDb250ZW50ID0gJ1lvdSBsb3NlISc7XG4gICAgcmVzdWx0U2NyZWVuLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAocGxheWVyMi5nYW1lYm9hcmQuZ2FtZW92ZXIoKSkge1xuICAgIHdpbm5lci50ZXh0Q29udGVudCA9ICdZb3Ugd2luISc7XG4gICAgcmVzdWx0U2NyZWVuLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmxldCBwbGF5ZXJUdXJuID0gdHJ1ZTtcbmNvbnN0IHJhbmRvbUhpdENvb3JkID0gW107XG5cbmFzeW5jIGZ1bmN0aW9uIHJhbmRvbUhpdCgpIHtcbiAgY29uc3QgcmFuZG9tUm93ID0gcmFuZG9tKDAsIDEwKTtcbiAgY29uc3QgcmFuZG9tQ29sdW1uID0gcmFuZG9tKDAsIDEwKTtcbiAgaWYgKHJhbmRvbUhpdENvb3JkLmluY2x1ZGVzKGAke3JhbmRvbVJvd30ke3JhbmRvbUNvbHVtbn1gKSkge1xuICAgIHJldHVybiByYW5kb21IaXQoKTtcbiAgfVxuICByYW5kb21IaXRDb29yZC5wdXNoKGAke3JhbmRvbVJvd30ke3JhbmRvbUNvbHVtbn1gKTtcbiAgYXdhaXQgc2xlZXAoMzAwKTtcblxuICBjb25zdCBpbm5lckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5yb3ctJHtyYW5kb21Sb3d9IC5ib3gtJHtyYW5kb21Db2x1bW59YCk7XG5cbiAgaWYgKHBsYXllcjEuZ2FtZWJvYXJkLmJvYXJkW3JhbmRvbVJvd11bcmFuZG9tQ29sdW1uXSA9PT0gMSkge1xuICAgIGlubmVyRGl2LmNsYXNzTGlzdC5hZGQoJ3gnKTtcbiAgfSBlbHNlIHtcbiAgICBpbm5lckRpdi5jbGFzc0xpc3QuYWRkKCdvJyk7XG4gIH1cblxuICBwbGF5ZXIyLmF0dGFjayhwbGF5ZXIxLCBbcmFuZG9tUm93LCByYW5kb21Db2x1bW5dKTtcblxuICBjaGVja0dhbWVvdmVyKCk7XG4gIHBsYXllclR1cm4gPSB0cnVlO1xuICByZXR1cm4gcGxheWVyVHVybjtcbn1cblxuZnVuY3Rpb24gbWFya1NoaXBEaXZzKCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpICs9IDEpIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDEwOyBqICs9IDEpIHtcbiAgICAgIGlmIChwbGF5ZXIxLmdhbWVib2FyZC5ib2FyZFtpXVtqXSA9PT0gMSkge1xuICAgICAgICBjb25zdCBib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAucm93LSR7aX0gLmJveC0ke2p9YCk7XG4gICAgICAgIGJveC5jbGFzc0xpc3QuYWRkKCdtYXJrJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1hcmtTaGlwRGl2cygpO1xuXG5mdW5jdGlvbiBoaXRFdmVudCgpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSArPSAxKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XG4gICAgICBjb25zdCBhcSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5yb3ctMi0ke2l9IC5ib3gtMi0ke2p9YCk7XG5cbiAgICAgIGFxLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgaWYgKHBsYXllclR1cm4pIHtcbiAgICAgICAgICBpZiAocGxheWVyMi5nYW1lYm9hcmQuYm9hcmRbaV1bal0gPT09IDEpIHtcbiAgICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3gnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZCgnbycpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwbGF5ZXIxLmF0dGFjayhwbGF5ZXIyLCBbaSwgal0pO1xuICAgICAgICAgIGlmIChjaGVja0dhbWVvdmVyKCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmFuZG9tSGl0KCk7XG5cbiAgICAgICAgICBwbGF5ZXJUdXJuID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0sIHsgb25jZTogdHJ1ZSB9KTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgaGl0RXZlbnQsIG1hcmtTaGlwRGl2cywgcmFuZG9tSGl0Q29vcmQsXG59O1xuIiwiaW1wb3J0IHsgcGxheWVyMSB9IGZyb20gJy4vcGxheWVycyc7XG5pbXBvcnQgeyBtYXJrU2hpcERpdnMgfSBmcm9tICcuL2dhbWUnO1xuaW1wb3J0IHsgc3RhcnRCdG4sIGZsZWV0Q29udGFpbmVyIH0gZnJvbSAnLi9kb21FbGVtZW50cyc7XG5cbmxldCBzaGlwT25Cb2FyZCA9IDA7XG5jb25zdCBkcmFnQW5kUm90YXRlID0gKCgpID0+IHtcbiAgY29uc3Qgc2hpcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2hpcHMnKTtcbiAgY29uc3QgZ3JpZENlbGxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJveCcpO1xuXG4gIGxldCBzaGlwSW5kZXg7XG4gIGxldCBkcmFnZ2VkU2hpcDtcblxuICBmdW5jdGlvbiByb3RhdGUoKSB7XG4gICAgc2hpcHMuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgc2hpcC5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsICgpID0+IHtcbiAgICAgICAgaWYgKHBsYXllcjEuZ2FtZWJvYXJkLmZsZWV0W3NoaXBJbmRleF0uZGV0YWlscy5kaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIHBsYXllcjEuZ2FtZWJvYXJkLmZsZWV0W3NoaXBJbmRleF0uZGV0YWlscy5kaXJlY3Rpb24gPSAndmVydGljYWwnO1xuICAgICAgICAgIHNoaXAuY2xhc3NMaXN0LnJlbW92ZSgnaG9yaXpvbnRhbCcpO1xuICAgICAgICAgIHNoaXAuY2xhc3NMaXN0LmFkZCgndmVydGljYWwnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwbGF5ZXIxLmdhbWVib2FyZC5mbGVldFtzaGlwSW5kZXhdLmRldGFpbHMuZGlyZWN0aW9uID0gJ2hvcml6b250YWwnO1xuICAgICAgICAgIHNoaXAuY2xhc3NMaXN0LnJlbW92ZSgndmVydGljYWwnKTtcbiAgICAgICAgICBzaGlwLmNsYXNzTGlzdC5hZGQoJ2hvcml6b250YWwnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBkcmFnKGNlbGxzID0gZ3JpZENlbGxzKSB7XG4gICAgY29uc3QgZ2V0RHJhZ2dlZFNoaXBJbmRleCA9IChlKSA9PiB7XG4gICAgICBzaGlwSW5kZXggPSBwbGF5ZXIxLmdhbWVib2FyZC5mbGVldC5maW5kSW5kZXgoKHNoaXApID0+IHNoaXAuZGV0YWlscy5uYW1lID09PSBlLnRhcmdldC5kYXRhc2V0Lm5hbWUpO1xuICAgIH07XG5cbiAgICBjb25zdCBkcmFnU3RhcnQgPSAoZSkgPT4ge1xuICAgICAgZHJhZ2dlZFNoaXAgPSBlLnRhcmdldDtcbiAgICB9O1xuXG4gICAgY29uc3QgZHJhZ092ZXIgPSAoZSkgPT4gZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgZHJhZ0VudGVyID0gKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2hvdmVyJyk7XG4gICAgfTtcblxuICAgIGNvbnN0IGRyYWdMZWF2ZSA9IChlKSA9PiB7XG4gICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdob3ZlcicpO1xuICAgIH07XG5cbiAgICBjb25zdCBkcmFnRHJvcCA9IChlKSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUudGFyZ2V0O1xuICAgICAgY29uc3QgeSA9IE51bWJlcihjb29yZC5kYXRhc2V0LnkpO1xuICAgICAgY29uc3QgeCA9IE51bWJlcihjb29yZC5kYXRhc2V0LngpO1xuXG4gICAgICBjb25zdCBwcm9wZXJQbGFjZWQgPSBwbGF5ZXIxLmdhbWVib2FyZC5wbGFjZVNoaXAoW3ksIHhdLCBwbGF5ZXIxLmdhbWVib2FyZC5mbGVldFtzaGlwSW5kZXhdKTtcbiAgICAgIGlmIChwcm9wZXJQbGFjZWQpIHtcbiAgICAgICAgc2hpcE9uQm9hcmQgKz0gMTtcbiAgICAgICAgZHJhZ2dlZFNoaXAuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xuICAgICAgfVxuICAgICAgaWYgKHNoaXBPbkJvYXJkID09PSA1KSB7XG4gICAgICAgIHN0YXJ0QnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2ZhZGVvdXQnKTtcbiAgICAgICAgc3RhcnRCdG4uY2xhc3NMaXN0LnJlbW92ZSgnaW52aXNpYmxlJyk7XG4gICAgICAgIHN0YXJ0QnRuLmNsYXNzTGlzdC5hZGQoJ2ZhZGVpbicpO1xuICAgICAgICBmbGVldENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdzaHJpbmsnKTtcblxuICAgICAgICBzaGlwT25Cb2FyZCA9IDA7XG4gICAgICB9XG5cbiAgICAgIG1hcmtTaGlwRGl2cygpO1xuICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnaG92ZXInKTtcbiAgICB9O1xuXG4gICAgY2VsbHMuZm9yRWFjaCgoY2VsbCkgPT4ge1xuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIGRyYWdPdmVyKTtcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VudGVyJywgZHJhZ0VudGVyKTtcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgZHJhZ0xlYXZlKTtcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIGRyYWdEcm9wKTtcbiAgICB9KTtcblxuICAgIHNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgIHNoaXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZ2V0RHJhZ2dlZFNoaXBJbmRleCk7XG4gICAgICBzaGlwLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIGRyYWdTdGFydCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHsgcm90YXRlLCBkcmFnIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBkcmFnQW5kUm90YXRlO1xuIiwiaW1wb3J0ICcuL3Njc3MvbWFpbi5zY3NzJztcbmltcG9ydCB7IGhpdEV2ZW50IH0gZnJvbSAnLi9tb2R1bGVzL2dhbWUnO1xuaW1wb3J0IGRyYWdBbmRSb3RhdGUgZnJvbSAnLi9tb2R1bGVzL2RyYWdBbmRSb3RhdGUnO1xuaW1wb3J0IHsgc3RhcnRCdG4sIHJlbmRlckJ0biB9IGZyb20gJy4vbW9kdWxlcy9kb21FbGVtZW50cyc7XG5pbXBvcnQgcmVuZGVyIGZyb20gJy4vbW9kdWxlcy9yZW5kZXInO1xuXG5zdGFydEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgaGl0RXZlbnQoKTtcbiAgc3RhcnRCdG4uY2xhc3NMaXN0LnJlbW92ZSgnZmFkZWluJyk7XG4gIHN0YXJ0QnRuLmNsYXNzTGlzdC5hZGQoJ2ZhZGVvdXQnKTtcbiAgc3RhcnRCdG4uY2xhc3NMaXN0LmFkZCgnaW52aXNpYmxlJyk7XG4gIGNvbnN0IGFpTWFpbkRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5haS1ncmlkLWNvbnRhaW5lcicpO1xuICBhaU1haW5EaXYuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBhaU1haW5EaXYuY2xhc3NMaXN0LnJlbW92ZSgnaW52aXNpYmxlJyk7XG4gICAgYWlNYWluRGl2LmNsYXNzTGlzdC5hZGQoJ2ZhZGVpbicpO1xuICB9LCA1MDApO1xufSk7XG5yZW5kZXJCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCByZW5kZXIpO1xuZHJhZ0FuZFJvdGF0ZS5kcmFnKCk7XG5kcmFnQW5kUm90YXRlLnJvdGF0ZSgpO1xuIiwiaW1wb3J0IHtcbiAgY29udGFpbmVyLCBzaGlwcywgZmxlZXRDb250YWluZXIsIHJlc3VsdFNjcmVlbixcbn0gZnJvbSAnLi9kb21FbGVtZW50cyc7XG5pbXBvcnQgY3JlYXRlR3JpZCBmcm9tICcuL2dyaWQnO1xuaW1wb3J0IHsgcGxheWVyMiwgcmVzZXRQbGF5ZXJzLCByYW5kb21QbGFjZW1lbnQgfSBmcm9tICcuL3BsYXllcnMnO1xuaW1wb3J0IGRyYWdBbmRSb3RhdGUgZnJvbSAnLi9kcmFnQW5kUm90YXRlJztcbmltcG9ydCB7IHJhbmRvbUhpdENvb3JkIH0gZnJvbSAnLi9nYW1lJztcblxuZnVuY3Rpb24gcmVzZXREb21FbGVtZW50cygpIHtcbiAgZmxlZXRDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnc2hyaW5rJyk7XG4gIHJlc3VsdFNjcmVlbi5jbGFzc0xpc3QuYWRkKCdub25lJyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUdyaWRzKCkge1xuICB3aGlsZSAoY29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcbiAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlTaGlwQ29udGFpbmVyKCkge1xuICBzaGlwcy5mb3JFYWNoKChzaGlwKSA9PiBzaGlwLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKSk7XG59XG5cbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgcmVtb3ZlR3JpZHMoKTtcblxuICBjcmVhdGVHcmlkKCk7XG5cbiAgY29uc3QgY2VsbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYm94Jyk7XG5cbiAgZHJhZ0FuZFJvdGF0ZS5kcmFnKGNlbGxzKTtcbiAgZGlzcGxheVNoaXBDb250YWluZXIoKTtcbiAgcmVzZXRQbGF5ZXJzKCk7XG4gIHJhbmRvbVBsYWNlbWVudChwbGF5ZXIyKTtcbiAgcmVzZXREb21FbGVtZW50cygpO1xuICAvLyBUaGlzIHJlc2V0cyBhbHJlYWR5IGhpdCBsb2NhdGlvbnNcbiAgcmFuZG9tSGl0Q29vcmQuc3BsaWNlKDAsIHJhbmRvbUhpdENvb3JkLmxlbmd0aCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlbmRlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=